<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.socks.tests.UsersTest" tests="6" skipped="0" failures="2" errors="0" timestamp="2020-12-28T19:28:28" hostname="MBP-Urij" time="1.301">
  <properties/>
  <testcase name="testCanRegisterNewUser" classname="com.socks.tests.UsersTest" time="0.645"/>
  <testcase name="testCannotRegisterSameUserTwice" classname="com.socks.tests.UsersTest" time="0.163"/>
  <testcase name="testCreateNewAddress" classname="com.socks.tests.UsersTest" time="0.094">
    <failure message="java.lang.AssertionError: 1 expectation failed.&#10;JSON path id doesn't match.&#10;Expected: an empty string&#10;  Actual: null&#10;" type="java.lang.AssertionError">java.lang.AssertionError: 1 expectation failed.
JSON path id doesn't match.
Expected: an empty string
  Actual: null

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:237)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:261)
	at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)
	at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:108)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
	at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
	at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)
	at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
	at com.socks.api.conditions.BodyFieldCondition.check(BodyFieldCondition.java:18)
	at com.socks.api.assertions.AssertableResponse.shouldHave(AssertableResponse.java:22)
	at com.socks.tests.UsersTest.testCreateNewAddress(UsersTest.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.testng.TestRunner.privateRun(TestRunner.java:766)
	at org.testng.TestRunner.run(TestRunner.java:587)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
	at org.testng.SuiteRunner.run(SuiteRunner.java:286)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
	at org.testng.TestNG.runSuites(TestNG.java:1039)
	at org.testng.TestNG.run(TestNG.java:1007)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="testCreateNewCard" classname="com.socks.tests.UsersTest" time="0.047">
    <failure message="java.lang.AssertionError: 1 expectation failed.&#10;Expected status code &lt;200&gt; but was &lt;500&gt;.&#10;" type="java.lang.AssertionError">java.lang.AssertionError: 1 expectation failed.
Expected status code &lt;200&gt; but was &lt;500&gt;.

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
	at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
	at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
	at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)
	at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
	at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)
	at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
	at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
	at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
	at com.socks.api.conditions.StatusCodeCondition.check(StatusCodeCondition.java:15)
	at com.socks.api.assertions.AssertableResponse.shouldHave(AssertableResponse.java:22)
	at com.socks.tests.UsersTest.testCreateNewCard(UsersTest.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.testng.TestRunner.privateRun(TestRunner.java:766)
	at org.testng.TestRunner.run(TestRunner.java:587)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
	at org.testng.SuiteRunner.run(SuiteRunner.java:286)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
	at org.testng.TestNG.runSuites(TestNG.java:1039)
	at org.testng.TestNG.run(TestNG.java:1007)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:141)
	at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)
	at org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)
	at org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)
	at java.lang.Thread.run(Thread.java:748)
</failure>
  </testcase>
  <testcase name="testReturnAllCards" classname="com.socks.tests.UsersTest" time="0.137"/>
  <testcase name="testReturnAllCustomers" classname="com.socks.tests.UsersTest" time="0.201"/>
  <system-out><![CDATA[Request method:	POST
Request URI:	http://localhost:80/register
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "password": "test123",
    "email": "test@gmail.com",
    "username": "rosetta.hintz",
    "firstName": "Shane",
    "lastName": "Bayer"
}
HTTP/1.1 200 OK
Content-Length: 33
Content-Type: application/json; charset=utf-8
Date: Mon, 28 Dec 2020 19:28:28 GMT
Etag: W/"21-bJW4nilPaq+9ZGth3VxNwxa54Ik"
Set-Cookie: _TRAEFIK_BACKEND=http://front-end:8079
Set-Cookie: logged_in=X3u9UFl-9D0STvfPIISD0q4vOlqLe5uU; Max-Age=3600; Path=/; Expires=Mon, 28 Dec 2020 20:28:28 GMT
Set-Cookie: md.sid=s%3AX3u9UFl-9D0STvfPIISD0q4vOlqLe5uU.o1R5H3sG%2BA04NcVOq5vbNINq6ZGkAzJsS%2FPG7WIAhrQ; Path=/; HttpOnly
X-Powered-By: Express

{
    "id": "5fea31dcee11cb000148ea20"
}
02:28:28.664 [Test worker] INFO com.socks.api.assertions.AssertableResponse - About to check condition status code is 200
02:28:28.664 [Test worker] INFO com.socks.api.assertions.AssertableResponse - About to check condition body field [id] not an empty string
Request method:	POST
Request URI:	http://localhost:80/register
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "password": "test123",
    "email": "test@gmail.com",
    "username": "antony.boyer",
    "firstName": "Kasie",
    "lastName": "Emard"
}
HTTP/1.1 200 OK
Content-Length: 33
Content-Type: application/json; charset=utf-8
Date: Mon, 28 Dec 2020 19:28:28 GMT
Etag: W/"21-1HqUzGDneC9JKieAlTWhaim0svE"
Set-Cookie: _TRAEFIK_BACKEND=http://front-end:8079
Set-Cookie: logged_in=YSnyd9hj2jy29HsdKg0FIKsQ8SxYTObw; Max-Age=3600; Path=/; Expires=Mon, 28 Dec 2020 20:28:28 GMT
Set-Cookie: md.sid=s%3AYSnyd9hj2jy29HsdKg0FIKsQ8SxYTObw.SjqNk6yxhg5CiuzSpTM%2FhKMdmu6F1oH33qSSUpszDsE; Path=/; HttpOnly
X-Powered-By: Express

{
    "id": "5fea31dcee11cb000148ea21"
}
02:28:28.778 [Test worker] INFO com.socks.api.assertions.AssertableResponse - About to check condition status code is 200
02:28:28.779 [Test worker] INFO com.socks.api.assertions.AssertableResponse - About to check condition body field [id] not an empty string
Request method:	POST
Request URI:	http://localhost:80/register
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "password": "test123",
    "email": "test@gmail.com",
    "username": "antony.boyer",
    "firstName": "Kasie",
    "lastName": "Emard"
}
HTTP/1.1 500 Internal Server Error
Content-Length: 0
Date: Mon, 28 Dec 2020 19:28:28 GMT
Set-Cookie: _TRAEFIK_BACKEND=http://front-end:8079
Set-Cookie: md.sid=s%3AzkoGB2QPoyAB154PDfWrtM9XBqvDCT_9.DKO0Ca1G%2FATGTje6dyY2XYOJEAVq4s1Z%2BNJBSWEGBFk; Path=/; HttpOnly
X-Powered-By: Express
Content-Type: text/plain; charset=utf-8
02:28:28.840 [Test worker] INFO com.socks.api.assertions.AssertableResponse - About to check condition status code is 500
02:28:28.904 [Test worker] INFO com.socks.api.assertions.AssertableResponse - About to check condition status code is 200
02:28:28.905 [Test worker] INFO com.socks.api.assertions.AssertableResponse - About to check condition body field [id] an empty string
02:28:28.982 [Test worker] INFO com.socks.api.assertions.AssertableResponse - About to check condition status code is 200
{
    "_embedded": {
        "card": [
            {
                "longNum": "5953580604169678",
                "expires": "08/19",
                "ccv": "678",
                "id": "57a98d98e4b00679b4a830ae",
                "_links": {
                    "card": {
                        "href": "http://user/cards/57a98d98e4b00679b4a830ae"
                    },
                    "self": {
                        "href": "http://user/cards/57a98d98e4b00679b4a830ae"
                    }
                }
            },
            {
                "longNum": "5544154011345918",
                "expires": "08/19",
                "ccv": "958",
                "id": "57a98d98e4b00679b4a830b1",
                "_links": {
                    "card": {
                        "href": "http://user/cards/57a98d98e4b00679b4a830b1"
                    },
                    "self": {
                        "href": "http://user/cards/57a98d98e4b00679b4a830b1"
                    }
                }
            },
            {
                "longNum": "0908415193175205",
                "expires": "08/19",
                "ccv": "280",
                "id": "57a98d98e4b00679b4a830b4",
                "_links": {
                    "card": {
                        "href": "http://user/cards/57a98d98e4b00679b4a830b4"
                    },
                    "self": {
                        "href": "http://user/cards/57a98d98e4b00679b4a830b4"
                    }
                }
            },
            {
                "longNum": "5429804235432",
                "expires": "04/16",
                "ccv": "432",
                "id": "57a98ddce4b00679b4a830d2",
                "_links": {
                    "card": {
                        "href": "http://user/cards/57a98ddce4b00679b4a830d2"
                    },
                    "self": {
                        "href": "http://user/cards/57a98ddce4b00679b4a830d2"
                    }
                }
            }
        ]
    }
}
02:28:29.116 [Test worker] INFO com.socks.api.assertions.AssertableResponse - About to check condition status code is 200
02:28:29.116 [Test worker] INFO com.socks.api.assertions.AssertableResponse - About to check condition body field [_embedded.card] not an empty collection
{
    "_embedded": {
        "customer": [
            {
                "firstName": "Eve",
                "lastName": "Berger",
                "username": "Eve_Berger",
                "id": "57a98d98e4b00679b4a830af",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/57a98d98e4b00679b4a830af/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/57a98d98e4b00679b4a830af/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/57a98d98e4b00679b4a830af"
                    },
                    "self": {
                        "href": "http://user/customers/57a98d98e4b00679b4a830af"
                    }
                }
            },
            {
                "firstName": "User",
                "lastName": "Name",
                "username": "user",
                "id": "57a98d98e4b00679b4a830b2",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/57a98d98e4b00679b4a830b2/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/57a98d98e4b00679b4a830b2/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/57a98d98e4b00679b4a830b2"
                    },
                    "self": {
                        "href": "http://user/customers/57a98d98e4b00679b4a830b2"
                    }
                }
            },
            {
                "firstName": "User1",
                "lastName": "Name1",
                "username": "user1",
                "id": "57a98d98e4b00679b4a830b5",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/57a98d98e4b00679b4a830b5/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/57a98d98e4b00679b4a830b5/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/57a98d98e4b00679b4a830b5"
                    },
                    "self": {
                        "href": "http://user/customers/57a98d98e4b00679b4a830b5"
                    }
                }
            },
            {
                "firstName": "Emerson",
                "lastName": "Baumbach",
                "username": "aubrey.bogan",
                "id": "5fea0fc1ee11cb000148e9ed",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea0fc1ee11cb000148e9ed/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea0fc1ee11cb000148e9ed/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea0fc1ee11cb000148e9ed"
                    },
                    "self": {
                        "href": "http://user/customers/5fea0fc1ee11cb000148e9ed"
                    }
                }
            },
            {
                "firstName": "Mary",
                "lastName": "Roob",
                "username": "lucio.bradtke",
                "id": "5fea0fc1ee11cb000148e9ee",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea0fc1ee11cb000148e9ee/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea0fc1ee11cb000148e9ee/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea0fc1ee11cb000148e9ee"
                    },
                    "self": {
                        "href": "http://user/customers/5fea0fc1ee11cb000148e9ee"
                    }
                }
            },
            {
                "firstName": "Marni",
                "lastName": "Hilpert",
                "username": "dorathy.medhurst",
                "id": "5fea10e4ee11cb000148e9f0",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea10e4ee11cb000148e9f0/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea10e4ee11cb000148e9f0/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea10e4ee11cb000148e9f0"
                    },
                    "self": {
                        "href": "http://user/customers/5fea10e4ee11cb000148e9f0"
                    }
                }
            },
            {
                "firstName": "Eugena",
                "lastName": "Nikolaus",
                "username": "ta.bins",
                "id": "5fea10e5ee11cb000148e9f1",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea10e5ee11cb000148e9f1/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea10e5ee11cb000148e9f1/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea10e5ee11cb000148e9f1"
                    },
                    "self": {
                        "href": "http://user/customers/5fea10e5ee11cb000148e9f1"
                    }
                }
            },
            {
                "firstName": "Ronald",
                "lastName": "Abbott",
                "username": "damien.tremblay",
                "id": "5fea11e1ee11cb000148e9f3",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea11e1ee11cb000148e9f3/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea11e1ee11cb000148e9f3/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea11e1ee11cb000148e9f3"
                    },
                    "self": {
                        "href": "http://user/customers/5fea11e1ee11cb000148e9f3"
                    }
                }
            },
            {
                "firstName": "Arnetta",
                "lastName": "Schuppe",
                "username": "gerry.wiza",
                "id": "5fea11e1ee11cb000148e9f4",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea11e1ee11cb000148e9f4/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea11e1ee11cb000148e9f4/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea11e1ee11cb000148e9f4"
                    },
                    "self": {
                        "href": "http://user/customers/5fea11e1ee11cb000148e9f4"
                    }
                }
            },
            {
                "firstName": "Launa",
                "lastName": "Wilderman",
                "username": "mickey.haag",
                "id": "5fea133bee11cb000148e9f6",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea133bee11cb000148e9f6/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea133bee11cb000148e9f6/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea133bee11cb000148e9f6"
                    },
                    "self": {
                        "href": "http://user/customers/5fea133bee11cb000148e9f6"
                    }
                }
            },
            {
                "firstName": "Illa",
                "lastName": "Upton",
                "username": "warren.wyman",
                "id": "5fea133bee11cb000148e9f7",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea133bee11cb000148e9f7/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea133bee11cb000148e9f7/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea133bee11cb000148e9f7"
                    },
                    "self": {
                        "href": "http://user/customers/5fea133bee11cb000148e9f7"
                    }
                }
            },
            {
                "firstName": "Rosalee",
                "lastName": "Bernhard",
                "username": "ernie.mraz",
                "id": "5fea1488ee11cb000148e9f9",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea1488ee11cb000148e9f9/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea1488ee11cb000148e9f9/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea1488ee11cb000148e9f9"
                    },
                    "self": {
                        "href": "http://user/customers/5fea1488ee11cb000148e9f9"
                    }
                }
            },
            {
                "firstName": "Tora",
                "lastName": "Altenwerth",
                "username": "jacqulyn.heidenreich",
                "id": "5fea1488ee11cb000148e9fa",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea1488ee11cb000148e9fa/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea1488ee11cb000148e9fa/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea1488ee11cb000148e9fa"
                    },
                    "self": {
                        "href": "http://user/customers/5fea1488ee11cb000148e9fa"
                    }
                }
            },
            {
                "firstName": "Agustina",
                "lastName": "Mitchell",
                "username": "tracie.hauck",
                "id": "5fea20f4ee11cb000148e9fc",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea20f4ee11cb000148e9fc/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea20f4ee11cb000148e9fc/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea20f4ee11cb000148e9fc"
                    },
                    "self": {
                        "href": "http://user/customers/5fea20f4ee11cb000148e9fc"
                    }
                }
            },
            {
                "firstName": "Kirby",
                "lastName": "Jacobs",
                "username": "katheleen.baumbach",
                "id": "5fea20f4ee11cb000148e9fd",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea20f4ee11cb000148e9fd/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea20f4ee11cb000148e9fd/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea20f4ee11cb000148e9fd"
                    },
                    "self": {
                        "href": "http://user/customers/5fea20f4ee11cb000148e9fd"
                    }
                }
            },
            {
                "firstName": "Marvel",
                "lastName": "Bartell",
                "username": "joellen.muller",
                "id": "5fea2685ee11cb000148e9ff",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2685ee11cb000148e9ff/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2685ee11cb000148e9ff/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2685ee11cb000148e9ff"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2685ee11cb000148e9ff"
                    }
                }
            },
            {
                "firstName": "Penney",
                "lastName": "Boyer",
                "username": "joette.schowalter",
                "id": "5fea2685ee11cb000148ea00",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2685ee11cb000148ea00/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2685ee11cb000148ea00/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2685ee11cb000148ea00"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2685ee11cb000148ea00"
                    }
                }
            },
            {
                "firstName": "Morton",
                "lastName": "Fisher",
                "username": "keiko.dooley",
                "id": "5fea2823ee11cb000148ea02",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2823ee11cb000148ea02/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2823ee11cb000148ea02/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2823ee11cb000148ea02"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2823ee11cb000148ea02"
                    }
                }
            },
            {
                "firstName": "Marica",
                "lastName": "Bins",
                "username": "johnny.pfeffer",
                "id": "5fea2823ee11cb000148ea03",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2823ee11cb000148ea03/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2823ee11cb000148ea03/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2823ee11cb000148ea03"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2823ee11cb000148ea03"
                    }
                }
            },
            {
                "firstName": "Jammie",
                "lastName": "Ondricka",
                "username": "josephina.stokes",
                "id": "5fea28caee11cb000148ea05",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea28caee11cb000148ea05/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea28caee11cb000148ea05/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea28caee11cb000148ea05"
                    },
                    "self": {
                        "href": "http://user/customers/5fea28caee11cb000148ea05"
                    }
                }
            },
            {
                "firstName": "Robert",
                "lastName": "Gerlach",
                "username": "wilbur.schmitt",
                "id": "5fea28caee11cb000148ea06",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea28caee11cb000148ea06/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea28caee11cb000148ea06/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea28caee11cb000148ea06"
                    },
                    "self": {
                        "href": "http://user/customers/5fea28caee11cb000148ea06"
                    }
                }
            },
            {
                "firstName": "Darryl",
                "lastName": "Heaney",
                "username": "beryl.wilderman",
                "id": "5fea2924ee11cb000148ea08",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2924ee11cb000148ea08/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2924ee11cb000148ea08/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2924ee11cb000148ea08"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2924ee11cb000148ea08"
                    }
                }
            },
            {
                "firstName": "Allen",
                "lastName": "Rath",
                "username": "andreas.beer",
                "id": "5fea2925ee11cb000148ea09",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2925ee11cb000148ea09/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2925ee11cb000148ea09/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2925ee11cb000148ea09"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2925ee11cb000148ea09"
                    }
                }
            },
            {
                "firstName": "Phuong",
                "lastName": "Nienow",
                "username": "margurite.hintz",
                "id": "5fea294cee11cb000148ea0b",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea294cee11cb000148ea0b/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea294cee11cb000148ea0b/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea294cee11cb000148ea0b"
                    },
                    "self": {
                        "href": "http://user/customers/5fea294cee11cb000148ea0b"
                    }
                }
            },
            {
                "firstName": "Dave",
                "lastName": "Witting",
                "username": "sallie.bosco",
                "id": "5fea294cee11cb000148ea0c",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea294cee11cb000148ea0c/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea294cee11cb000148ea0c/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea294cee11cb000148ea0c"
                    },
                    "self": {
                        "href": "http://user/customers/5fea294cee11cb000148ea0c"
                    }
                }
            },
            {
                "firstName": "Earnest",
                "lastName": "Feil",
                "username": "terence.bergnaum",
                "id": "5fea2b5eee11cb000148ea0e",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2b5eee11cb000148ea0e/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2b5eee11cb000148ea0e/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2b5eee11cb000148ea0e"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2b5eee11cb000148ea0e"
                    }
                }
            },
            {
                "firstName": "Wei",
                "lastName": "Wuckert",
                "username": "desirae.murazik",
                "id": "5fea2b5eee11cb000148ea0f",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2b5eee11cb000148ea0f/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2b5eee11cb000148ea0f/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2b5eee11cb000148ea0f"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2b5eee11cb000148ea0f"
                    }
                }
            },
            {
                "firstName": "Sandi",
                "lastName": "Wolff",
                "username": "shirely.bergnaum",
                "id": "5fea2bd4ee11cb000148ea11",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2bd4ee11cb000148ea11/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2bd4ee11cb000148ea11/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2bd4ee11cb000148ea11"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2bd4ee11cb000148ea11"
                    }
                }
            },
            {
                "firstName": "Chris",
                "lastName": "Schoen",
                "username": "angela.ritchie",
                "id": "5fea2bd4ee11cb000148ea12",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2bd4ee11cb000148ea12/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2bd4ee11cb000148ea12/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2bd4ee11cb000148ea12"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2bd4ee11cb000148ea12"
                    }
                }
            },
            {
                "firstName": "Duane",
                "lastName": "West",
                "username": "latashia.weber",
                "id": "5fea2c1cee11cb000148ea14",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2c1cee11cb000148ea14/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2c1cee11cb000148ea14/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2c1cee11cb000148ea14"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2c1cee11cb000148ea14"
                    }
                }
            },
            {
                "firstName": "Tyson",
                "lastName": "Kuhn",
                "username": "terry.murphy",
                "id": "5fea2c1dee11cb000148ea15",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2c1dee11cb000148ea15/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2c1dee11cb000148ea15/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2c1dee11cb000148ea15"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2c1dee11cb000148ea15"
                    }
                }
            },
            {
                "firstName": "Theo",
                "lastName": "Gerlach",
                "username": "joslyn.gerhold",
                "id": "5fea2d59ee11cb000148ea17",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2d59ee11cb000148ea17/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2d59ee11cb000148ea17/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2d59ee11cb000148ea17"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2d59ee11cb000148ea17"
                    }
                }
            },
            {
                "firstName": "Bonny",
                "lastName": "Mohr",
                "username": "alfonso.senger",
                "id": "5fea2d59ee11cb000148ea18",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2d59ee11cb000148ea18/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2d59ee11cb000148ea18/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2d59ee11cb000148ea18"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2d59ee11cb000148ea18"
                    }
                }
            },
            {
                "firstName": "Kelsey",
                "lastName": "Waters",
                "username": "bradley.herman",
                "id": "5fea2dabee11cb000148ea1a",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2dabee11cb000148ea1a/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2dabee11cb000148ea1a/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2dabee11cb000148ea1a"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2dabee11cb000148ea1a"
                    }
                }
            },
            {
                "firstName": "Valorie",
                "lastName": "Connelly",
                "username": "burl.kuvalis",
                "id": "5fea2dabee11cb000148ea1b",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2dabee11cb000148ea1b/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2dabee11cb000148ea1b/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2dabee11cb000148ea1b"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2dabee11cb000148ea1b"
                    }
                }
            },
            {
                "firstName": "Kennith",
                "lastName": "Nienow",
                "username": "pricilla.mosciski",
                "id": "5fea2e0dee11cb000148ea1d",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2e0dee11cb000148ea1d/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2e0dee11cb000148ea1d/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2e0dee11cb000148ea1d"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2e0dee11cb000148ea1d"
                    }
                }
            },
            {
                "firstName": "Carletta",
                "lastName": "Lockman",
                "username": "luke.ritchie",
                "id": "5fea2e0dee11cb000148ea1e",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea2e0dee11cb000148ea1e/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea2e0dee11cb000148ea1e/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea2e0dee11cb000148ea1e"
                    },
                    "self": {
                        "href": "http://user/customers/5fea2e0dee11cb000148ea1e"
                    }
                }
            },
            {
                "firstName": "Shane",
                "lastName": "Bayer",
                "username": "rosetta.hintz",
                "id": "5fea31dcee11cb000148ea20",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea31dcee11cb000148ea20/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea31dcee11cb000148ea20/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea31dcee11cb000148ea20"
                    },
                    "self": {
                        "href": "http://user/customers/5fea31dcee11cb000148ea20"
                    }
                }
            },
            {
                "firstName": "Kasie",
                "lastName": "Emard",
                "username": "antony.boyer",
                "id": "5fea31dcee11cb000148ea21",
                "_links": {
                    "addresses": {
                        "href": "http://user/customers/5fea31dcee11cb000148ea21/addresses"
                    },
                    "cards": {
                        "href": "http://user/customers/5fea31dcee11cb000148ea21/cards"
                    },
                    "customer": {
                        "href": "http://user/customers/5fea31dcee11cb000148ea21"
                    },
                    "self": {
                        "href": "http://user/customers/5fea31dcee11cb000148ea21"
                    }
                }
            }
        ]
    }
}
02:28:29.263 [Test worker] INFO com.socks.api.assertions.AssertableResponse - About to check condition status code is 200
02:28:29.264 [Test worker] INFO com.socks.api.assertions.AssertableResponse - About to check condition body field [_embedded.customer] not an empty collection
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
